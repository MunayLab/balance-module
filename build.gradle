buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "0.1"
group "org.munaylab.accounting"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-core"
    console "org.grails:grails-console"
    profile "org.grails.profiles:plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

bootRepackage.enabled = false
grailsPublish {
    user = 'Munay Team'
    key = 'key'
    githubSlug = 'foo/bar'
    license {
        name = 'GPL3'
    }
    title = "Accounting Module"
    desc = "Munaylab Accounting Module"
    developers = [team:"team@munaylab.org"]
}

test {
    testLogging.exceptionFormat = 'full'
    // testLogging.showStandardStreams = true
    beforeTest { descriptor ->
        String fullClassName = descriptor.className
        String className = fullClassName.substring(fullClassName.indexOf('munaylab.') + 9)
        print "Testing: [${className.replace('Spec', '')}] - ${descriptor.name}"
    }
    afterTest { descriptor, result ->
        String RED = '\u001B[31m'
        String RESET = '\u001B[0m'
        String GREEN = '\u001B[32m'
        if (result.resultType == TestResult.ResultType.SUCCESS) {
            println "$GREEN \u2714 $RESET"
        } else {
            println "$RED \u2716 $RESET"
        }
    }
}
